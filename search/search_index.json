{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Dhyey's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p>"},{"location":"tutorials/go-setup/","title":"Setting up a dev container for Go","text":"<ul> <li>Primary author: Dhyey Shah</li> <li>Reviewer: Alexander Shang</li> </ul>"},{"location":"tutorials/go-setup/#prerequisites","title":"Prerequisites","text":"<p>Before starting this tutorial, ensure the following:</p> <ol> <li>Create a GitHub account.</li> <li>Install Git.</li> <li>Install Visual Studio Code (VS Code).</li> <li>Install Docker.</li> </ol>"},{"location":"tutorials/go-setup/#step-1-create-a-local-directory-and-initialize-git","title":"Step 1: Create a Local Directory and Initialize Git","text":"<ol> <li> <p>Open your terminal or command prompt.</p> </li> <li> <p>Create a new directory for your project:</p> <pre><code>mkdir go-hello-comp423\ncd go-hello-comp423\n</code></pre> </li> <li> <p>Initialize a new Git repository:</p> <pre><code>git init\n</code></pre> </li> <li> <p>Add a README if you would like:</p> <pre><code>echo \"&lt;your-readme.md-text&gt;\" &gt; README.md\ngit add README.md\ngit commit -m \"Initial commit with README\"\n</code></pre> <p>Replace <code>&lt;your-readme.md-text&gt;</code> with your README markdown text.</p> </li> </ol>"},{"location":"tutorials/go-setup/#step-2-create-a-remote-repository-on-github","title":"Step 2: Create a Remote Repository on GitHub","text":"<ol> <li>Log in to your GitHub account and navigate to the Create a New Repository page.</li> <li> <p>Create a new repository with the name <code>go-hello-comp423</code> and ensure the visibility is set to public.</p> </li> <li> <p>Add the GitHub repository as a remote:</p> <pre><code>git remote add origin https://github.com/&lt;your-username&gt;/go-hello-comp423.git\n</code></pre> <p>Replace <code>&lt;your-username&gt;</code> with your GitHub username.</p> </li> </ol>"},{"location":"tutorials/go-setup/#step-3-set-up-a-development-container","title":"Step 3: Set up a Development Container","text":"<ol> <li> <p>Inside the project directory, create a <code>.devcontainer</code> folder and add a <code>devcontainer.json</code> file:</p> <pre><code>mkdir .devcontainer\ntouch .devcontainer/devcontainer.json\n</code></pre> </li> <li> <p>In VS Code, open the go-hello-comp423 directory. You can do this via: File &gt; Open Folder.</p> </li> <li>Install the Dev Containers extension for VS Code.</li> <li> <p>Add the following configuration to your <code>devcontainers.json</code> file:</p> <pre><code>{\n    \"name\": \"Go Dev Container\",\n    \"image\": \"mcr.microsoft.com/devcontainers/go:latest\",\n    \"features\": {},\n    \"customizations\": {\n        \"vscode\": {\n            \"extensions\": [\"golang.go\"]\n        }\n    }\n}\n</code></pre> <ul> <li><code>name</code>: A descriptive name for your dev container.</li> <li><code>image</code>: The base image from Microsoft with Go pre-installed.</li> <li><code>customizations</code>: Adds useful configurations to VS Code, like installing the Go extension.</li> </ul> </li> <li> <p>Reopen the project in the container by pressing <code>Ctrl+Shift+P</code> (or <code>Cmd+Shift+P</code> on Mac), typing \"Dev Containers: Reopen in Container,\" and selecting the option. </p> </li> <li>Open the terminal in VS Code and run:<pre><code>go version\n</code></pre> <p>This verifies the Go version installed in the container.</p> </li> </ol>"},{"location":"tutorials/go-setup/#step-4-create-a-new-go-project","title":"Step 4: Create a New Go Project","text":"<ol> <li> <p>Run the following command to initialize the Go project:</p> <pre><code>go mod init go-hello-comp423\n</code></pre> </li> <li> <p>Create a file named <code>main.go</code>:</p> <pre><code>touch main.go\n</code></pre> </li> <li> <p>Add the following content to <code>main.go</code>:</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello COMP423\")\n}\n</code></pre> </li> </ol>"},{"location":"tutorials/go-setup/#step-5-run-the-program","title":"Step 5: Run the program","text":"<p>You have two options:</p> <ul> <li> <p>Execute the program directly:</p> <pre><code>go run main.go\n</code></pre> </li> <li> <p>Compile the program into a binary:</p> <pre><code>go build -o hello\n./hello\n</code></pre> </li> </ul> <p>Note</p> <p>The <code>go run</code> command executes the source code directly, while the <code>go build</code> command compiles the code into an executable binary, which can be run without requiring Go at runtime (similar to gcc in that they both compile code into an executable).</p> <p>Congratulations! You have successfully set up a dev container for Go!</p>"}]}